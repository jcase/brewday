apply from: "${gradleScriptDir}/gradleprops.gradle"
apply from: "${gradleScriptDir}/java.gradle"
apply plugin: "application"

dependencies {
  compile project(':brewday-shared')
  compile libraries.commons_lang3
  compile libraries.commons_cli
  compile libraries.spring_mvc
  compile libraries.reflections
  compile libraries.jetty_server
  compile libraries.jetty_servlet
  compile libraries.jetty_webapp

  compile libraries.jersey_server
  compile libraries.jersey_core
  compile libraries.jersey_media
  compile libraries.jersey_spring

}

ext {
    serviceMain = "com.novust.brewday.BrewDayService"
    classpathFile = "${projectDir}/brewday_service_classpath.txt"
}

mainClassName = serviceMain

task writeClasspathFile(dependsOn: build) {
    group = "Brewday Service"
    description = 'Generate a file containing the necessary classpath to run the service'
    outputs.files(classpathFile)
    doLast {
        def file1 = new File(classpathFile)
        file1.withWriter('UTF-8') { writer ->
            writer.write(sourceSets.main.runtimeClasspath.asPath)
        }
        println "Generated classpath file ${classpathFile}"
    }
}

task runService(type: JavaExec, dependsOn: classes) {
    group = "Brewday Service"
    description = 'Run the service using a given config file'
    classpath = sourceSets.main.runtimeClasspath
    main = serviceMain
    args '-f', project.ext.environmentConfigFile
}



